"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  build: () => build,
  version: () => version
});
module.exports = __toCommonJS(src_exports);

// src/build.ts
var import_node = require("@vercel/node");
var build = async ({
  files,
  workPath,
  config,
  meta = {}
}) => {
  const validEntrypoints = [
    "index.ts",
    "index.js",
    "index.mjs",
    "index.cjs",
    "src/index.ts",
    "src/index.js",
    "src/index.mjs",
    "src/index.cjs"
  ];
  const entrypoint = validEntrypoints.find((path) => files[path] !== void 0);
  if (!entrypoint) {
    throw new Error("No valid entrypoint found");
  }
  return (0, import_node.build)({
    entrypoint,
    files,
    shim,
    workPath,
    useWebApi: true,
    config,
    meta
  });
};
var shim = (handler) => `
import app from "./${handler}";

const handle = async (request) => {
  return app.fetch(request);
};

export const GET = handle;
export const POST = handle;
export const PUT = handle;
export const DELETE = handle;
export const PATCH = handle;
export const OPTIONS = handle;
export const HEAD = handle;`;

// src/index.ts
var version = 3;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  build,
  version
});
